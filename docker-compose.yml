version: '2.3'


services:

  nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
    volumes:
      - ./data/nginx:/data
      - ./letsencrypt:/etc/letsencrypt


  db:
    image: ghcr.io/linuxserver/mariadb # 'jc21/mariadb-aria:latest'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'admin'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1m30s
      retries: 3
      start_period: 40s
      timeout: 20s
    volumes:
      - ./data/mysql:/var/lib/mysql


  # git clone of jeedom source
  installing:
    build: ./app
    volumes:
      - ./jeedom:/app


  jeedom:
    build: ./php
    privileged: false
    pid: "host"
    environment:
      - TZ=Europe/Paris
    cap_add:
      - SYS_PTRACE
    # tty: true
    hostname: jeedom
    #mac_address: a0:ca:ab:cd:ef:02
    #networks:
    #     default:
    #        ipv4_address: 192.168.1.11
    # devices:
    #     - "/dev/ttyUSB0"
    #     - "/dev/ttyUSB1"
    #     - "/dev/ttyACM0"
    restart: unless-stopped
    volumes:
      - ./jeedom:/var/www/html
      - ./backup:/var/www/html/backup
    depends_on:
      - installing
    healthcheck:
      test: ["CMD-SHELL", "curl -so /tmp/status http://nginx/status || exit 1"]
      interval: 1m30s
      retries: 3
      start_period: 40s
      timeout: 20s


  # Scheduler Service
  scheduler:
    image: ofelia
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ofelia.ini:/etc/ofelia/config.ini
    depends_on:
      - jeedom


  phpmyadmin:
    image: phpmyadmin:5.0


  portainer:
    image: portainer/portainer-ce
    privileged: true
    environment:
      - TZ=Europe/Paris
    ports:
        - 8000:8000
        - 9000:9000
    restart: unless-stopped
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./data/portainer:/data


  zwave:
    image: zwavejs/zwavejs2mqtt
    ports:
      - 3000:3000
      - 8091:8091
    devices:
    #  - "/dev/ttyUSB0"
    #  - "/dev/ttyUSB1"
      - "/dev/ttyACM0"
    volumes:
      - ./data/zwave:/usr/src/app/store


  mqtt:
    image: eclipse-mosquitto
    ports:
      - 1883:1883 #Uniquement si besoin d'avoir le port expos√©
    restart: unless-stopped
    healthcheck:
      test: "mosquitto_sub -t '$$SYS/#' -C 1 | grep -v Error || exit 1"
      interval: 5s
      timeout: 5s
      retries: 3
